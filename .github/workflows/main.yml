name: build and test
permissions: read-all
  
on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v 4.2.2

      - name: Set up JDK 11
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # 4.5.0
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Run deploy script
        run: |
            export RP_BASE_DIR=$(cd "$(dirname "$0")"; pwd)

            export TARGET_PROJECTS=(
            replugin-host-gradle
            replugin-host-library
            replugin-plugin-gradle
            replugin-plugin-library
            )
            __gradle_exec(){ if [[ -x gradlew ]];then ./gradlew ${@}; else gradle ${@}; fi; }

            __rp_deploy_project(){
                [[ ! -d ${1} ]] && echo ">>> INVALID ${1}!!! <<<" && return
                # execute deploying
                echo ">>> ${1} <<<" && cd ${1} && __gradle_exec -p ${1} clean bintrayUpload
                # revert changed files
                git checkout ${1}
            }

            rp_revert_AppConstant(){
                git status -s | sed s/^...// | grep '/AppConstant.groovy' | git checkout ${f}
            }

            rp_deploy(){
                local current=`pwd` && cd ${RP_BASE_DIR}
                # revert AppConstant.groovy
                rp_revert_AppConstant
                # saving all changes: git stash save "saving stash for deploying!!!"
                # deploy
                for p in ${TARGET_PROJECTS}; do __rp_deploy_project ${RP_BASE_DIR}/${p}; done
                # revert local changes: git revert --hard HEAD; git stash pop
                rp_revert_AppConstant
                # back
                cd ${current}
            }
            rp_deploy()
          

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: test
        run: |
          rp_test(){
          	local projects=(
          		# replugin-sample/host/app
          		replugin-sample/host
          		# replugin-sample/plugin/plugin-demo1/app
          		replugin-sample/plugin/plugin-demo1
          		# replugin-sample/plugin/plugin-demo2/app
          		replugin-sample/plugin/plugin-demo2
          		# replugin-sample/plugin/plugin-demo3-kotlin/app
          		replugin-sample/plugin/plugin-demo3-kotlin
          		# replugin-sample/plugin/plugin-webview/app
          		replugin-sample/plugin/plugin-webview
          		# replugin-sample-extra/fresco/FrescoHost/app
          		replugin-sample-extra/fresco/FrescoHost
          		# replugin-sample-extra/fresco/FrescoPlugin/app
          		replugin-sample-extra/fresco/FrescoPlugin
          	)
          	local log=${RP_BASE_DIR}/build/rp_test.log && [[ -f $log ]] && rm -f $log && touch $log
          	local current=`pwd`
            for p in ${projects}; do
              echo -e ">>> BUILDING ${RP_BASE_DIR}/${p}"
              cd "${RP_BASE_DIR}/${p}" && { __gradle_exec -p "${RP_BASE_DIR}/${p}" clean asDebug; }
              ls -l "${RP_BASE_DIR}/${p}/app/build/outputs/apk"
            done
            cd ${current}
          }
          rp_test()
